{"paragraphs":[{"text":"%md\n## Setting Up a Home Directory in Our Instance\n\nIn order to interact in this training. You first need to ensure that you have secure access to the EC2 Instance where we will be doing a majority of our work. Please follow the steps below.\n\n### 1. Email your public key to the moderator\nTo find your public key enter the following command in the `Terminal` (macOs/Linux) or `GitBash` shell (Windows):```$ cat ~/.ssh/id_rsa.pub```\n`$ cat ~/.ssh/id_rsa.pub`\nYou should see something like this:\n`ssh-rsa AAAA....... name@domain.local`\n\nIf you dont see this, go to Step 2. If you do, copy the output and send it to <email@domain.edu>\n\n### 2. Create a public key\nWe will create a public key using the RSA alogithm. **NOTE**: When it asks for a password the password will not print to the screen. \n`ssh-keygen -t rsa -b 4096`\n\n```\n> ssh-keygen -t rsa -b 4096\nGenerating public/private rsa key pair.\nEnter file in which to save the key (/home/ylo/.ssh/id_rsa): \nEnter passphrase (empty for no passphrase): \nEnter same passphrase again: \nYour identification has been saved in /home/ylo/.ssh/id_rsa.\nYour public key has been saved in /home/ylo/.ssh/id_rsa.pub.\nThe key fingerprint is:\nSHA256:Up6KjbnEV4Hgfo75YM393QdQsK3Z0aTNBz0DoirrW+c ylo@klar\nThe key's randomart image is:\n+---[RSA 4096]----+\n|    .      ..oo..|\n|   . . .  . .o.X.|\n|    . . o.  ..+ B|\n|   .   o.o  .+ ..|\n|    ..o.S   o..  |\n|   . %o=      .  |\n|    @.B...     . |\n|   o.=. o. . .  .|\n|    .oo  E. . .. |\n+-----------------+\n\n```\nNow that we have created a public key, go back and complete Step 1. And process to Step 3.\n\n### 3. Login to the server.\nOnce the moderator has created your account. You will receive a username and a password for you account. You can proceed to setting up the browser proxy needed to access the applications.","user":"innocent","dateUpdated":"2021-01-21T07:58:52+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h2>Setting Up a Home Directory in Our Instance</h2>\n<p>In order to interact in this training. You first need to ensure that you have secure access to the EC2 Instance where we will be doing a majority of our work. Please follow the steps below.</p>\n<h3>1. Email your public key to the moderator</h3>\n<p>To find your public key enter the following command in the <code>Terminal</code> (macOs/Linux) or <code>GitBash</code> shell (Windows):<code>$ cat ~/.ssh/id_rsa.pub</code><br/><code>$ cat ~/.ssh/id_rsa.pub</code><br/>You should see something like this:<br/><code>ssh-rsa AAAA....... name@domain.local</code></p>\n<p>If you dont see this, go to Step 2. If you do, copy the output and send it to <a href=\"mailto:&#101;m&#97;&#x69;&#x6c;&#x40;&#x64;&#111;&#x6d;&#x61;i&#110;&#x2e;&#101;d&#117;\">&#101;m&#97;&#x69;&#x6c;&#x40;&#x64;&#111;&#x6d;&#x61;i&#110;&#x2e;&#101;d&#117;</a></p>\n<h3>2. Create a public key</h3>\n<p>We will create a public key using the RSA alogithm. <strong>NOTE</strong>: When it asks for a password the password will not print to the screen.<br/><code>ssh-keygen -t rsa -b 4096</code></p>\n<pre><code>&gt; ssh-keygen -t rsa -b 4096\nGenerating public/private rsa key pair.\nEnter file in which to save the key (/home/ylo/.ssh/id_rsa): \nEnter passphrase (empty for no passphrase): \nEnter same passphrase again: \nYour identification has been saved in /home/ylo/.ssh/id_rsa.\nYour public key has been saved in /home/ylo/.ssh/id_rsa.pub.\nThe key fingerprint is:\nSHA256:Up6KjbnEV4Hgfo75YM393QdQsK3Z0aTNBz0DoirrW+c ylo@klar\nThe key&#39;s randomart image is:\n+---[RSA 4096]----+\n|    .      ..oo..|\n|   . . .  . .o.X.|\n|    . . o.  ..+ B|\n|   .   o.o  .+ ..|\n|    ..o.S   o..  |\n|   . %o=      .  |\n|    @.B...     . |\n|   o.=. o. . .  .|\n|    .oo  E. . .. |\n+-----------------+\n\n</code></pre>\n<p>Now that we have created a public key, go back and complete Step 1. And process to Step 3.</p>\n<h3>3. Login to the server.</h3>\n<p>Once the moderator has created your account. You will receive a username and a password for you account. You can proceed to setting up the browser proxy needed to access the applications.</p>\n</div>"}]},"apps":[],"jobName":"paragraph_1611185084366_-1699087685","id":"20201210-201631_1572432845","dateCreated":"2021-01-20T23:24:44+0000","dateStarted":"2021-01-21T07:58:52+0000","dateFinished":"2021-01-21T07:58:52+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:60"},{"text":"%md\n\n## Configure the browser proxy\n* Download the proxy configuration file here: [foxyproxy_settings.xml](https://gist.github.com/innoobijr/ff9b045deb218ce5c4b0817812de355d).\n\n* Install the browser extension FoxyProxy. (links: for [Chrome](https://chrome.google.com/webstore/detail/foxyproxy-standard/gcknhkkoolaabfmlnjonogaaifnjlfnp?hl=en), for [Firefox](https://addons.mozilla.org/en-US/firefox/addon/foxyproxy-standard/)).\n\n* After the extension is installed, click on the FoxyProxy icon in the browser. Then click Options. This opens the FoxyProxy configuration page.\n\n* **Import proxy configuration**: On the left sidebar, go to Import/Export. Under *'Import FoxyProxy settings from a file'*, click choose file and select the XML file downloaded previously. This will import the SOCKS5 proxy settings which the browser will use to proxy through the SSH tunnel.\n\n## Establishing an SSH tunnel\n* **Add your ssh public key to the server:** Find your ssh public key on the local computer and add it to the server (talk to Innocent about it). You can try the command `ls ~/.ssh` to see if there is already an ssh key and see its location. If you don't have one or forgot the password the existing one, you can generate a new one by running `ssh-keygen`. Just press enter when it asks for a file location to save. After the key is generated, find the key, and add it to the server.\n\n* **Establish an SSH Tunnel:** Run` ssh -ND 8157 username@52.33.122.28` on your local terminal, where username is the user on the server with the above public key on the server. This will not return any status or response; this is expected.\n\n* **Enable proxy on the browser:** Now click on the FoxyProxy icon in the browser again and click on 'Use proxies based on their predefined patterns and priorities'. The icon should change to blue now indicating that the proxy is ready. Now you can go to the website (link for Jupyter Notebook on AWS).\n\nWhen you are done, disable the proxy by clicking on the FoxyProxy icon > Disable FoxyProxy, and also end the SSH tunnel process running in the terminal.\n\nThe next time when you need to access the app again, run the last two steps: Establish an SSH Tunnel, and Enable proxy on the browser.","user":"innocent","dateUpdated":"2021-01-20T23:24:44+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h2>Configure the browser proxy</h2>\n<ul>\n  <li>\n  <p>Download the proxy configuration file here: <a href=\"https://gist.github.com/innoobijr/ff9b045deb218ce5c4b0817812de355d\">foxyproxy_settings.xml</a>.</p></li>\n  <li>\n  <p>Install the browser extension FoxyProxy. (links: for <a href=\"https://chrome.google.com/webstore/detail/foxyproxy-standard/gcknhkkoolaabfmlnjonogaaifnjlfnp?hl=en\">Chrome</a>, for <a href=\"https://addons.mozilla.org/en-US/firefox/addon/foxyproxy-standard/\">Firefox</a>).</p></li>\n  <li>\n  <p>After the extension is installed, click on the FoxyProxy icon in the browser. Then click Options. This opens the FoxyProxy configuration page.</p></li>\n  <li>\n  <p><strong>Import proxy configuration</strong>: On the left sidebar, go to Import/Export. Under <em>&lsquo;Import FoxyProxy settings from a file&rsquo;</em>, click choose file and select the XML file downloaded previously. This will import the SOCKS5 proxy settings which the browser will use to proxy through the SSH tunnel.</p></li>\n</ul>\n<h2>Establishing an SSH tunnel</h2>\n<ul>\n  <li>\n  <p><strong>Add your ssh public key to the server:</strong> Find your ssh public key on the local computer and add it to the server (talk to Innocent about it). You can try the command <code>ls ~/.ssh</code> to see if there is already an ssh key and see its location. If you don&rsquo;t have one or forgot the password the existing one, you can generate a new one by running <code>ssh-keygen</code>. Just press enter when it asks for a file location to save. After the key is generated, find the key, and add it to the server.</p></li>\n  <li>\n  <p><strong>Establish an SSH Tunnel:</strong> Run<code>ssh -ND 8157 username@52.33.122.28</code> on your local terminal, where username is the user on the server with the above public key on the server. This will not return any status or response; this is expected.</p></li>\n  <li>\n  <p><strong>Enable proxy on the browser:</strong> Now click on the FoxyProxy icon in the browser again and click on &lsquo;Use proxies based on their predefined patterns and priorities&rsquo;. The icon should change to blue now indicating that the proxy is ready. Now you can go to the website (link for Jupyter Notebook on AWS).</p></li>\n</ul>\n<p>When you are done, disable the proxy by clicking on the FoxyProxy icon &gt; Disable FoxyProxy, and also end the SSH tunnel process running in the terminal.</p>\n<p>The next time when you need to access the app again, run the last two steps: Establish an SSH Tunnel, and Enable proxy on the browser.</p>\n</div>"}]},"apps":[],"jobName":"paragraph_1611185084367_-1600220414","id":"20201123-210649_1695544277","dateCreated":"2021-01-20T23:24:44+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:61"},{"text":"%md ### Training Endpoints\n\nOnce you have completed the above instructions, you will now be able to access our Notebook environment here.\n\n| Application | Endpoint |\n|-------------|----------|\n| JupyterLab | http://ec2-52-33-122-28.us-west-2.compute.amazonaws.com:8000/ |\n| Apache Zeppelin | http://ec2-52-33-122-28.us-west-2.compute.amazonaws.com:8080/ |","user":"innocent","dateUpdated":"2021-01-20T23:24:44+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h3>Training Endpoints</h3>\n<p>Once you have completed the above instructions, you will now be able to access our Notebook environment here.</p>\n<table>\n  <thead>\n    <tr>\n      <th>Application </th>\n      <th>Endpoint </th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td>JupyterLab </td>\n      <td><a href=\"http://ec2-52-33-122-28.us-west-2.compute.amazonaws.com:8000/\">http://ec2-52-33-122-28.us-west-2.compute.amazonaws.com:8000/</a> </td>\n    </tr>\n    <tr>\n      <td>Apache Zeppelin </td>\n      <td><a href=\"http://ec2-52-33-122-28.us-west-2.compute.amazonaws.com:8080/\">http://ec2-52-33-122-28.us-west-2.compute.amazonaws.com:8080/</a> </td>\n    </tr>\n  </tbody>\n</table>\n</div>"}]},"apps":[],"jobName":"paragraph_1611185084367_-1995471266","id":"20201203-182411_1934053190","dateCreated":"2021-01-20T23:24:44+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:62"},{"text":"%md\n","user":"innocent","dateUpdated":"2021-01-20T23:24:44+0000","config":{"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1611185084367_-483034177","id":"20201203-182545_436897107","dateCreated":"2021-01-20T23:24:44+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:63"}],"name":"Training/I. Setting-Up-Socks-Proxy","id":"2FY1FHUCZ","noteParams":{},"noteForms":{},"angularObjects":{"md:shared_process":[],"python:shared_process":[],"spark:shared_process":[]},"config":{"isZeppelinNotebookCronEnable":false,"looknfeel":"default","personalizedMode":"false"},"info":{}}