{"paragraphs":[{"text":"%md # Generating Stops\n","user":"innocent","dateUpdated":"2021-01-20T23:24:19+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h1>Generating Stops</h1>\n</div>"}]},"apps":[],"jobName":"paragraph_1611185059445_291736114","id":"20201203-015314_510829333","dateCreated":"2021-01-20T23:24:19+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:60"},{"text":"%pyspark\nfrom pyspark.sql.window import Window\nimport pyspark.sql.functions as F","user":"innocent","dateUpdated":"2021-01-20T23:41:32+0000","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1611185059450_394625035","id":"20201202-234747_938208770","dateCreated":"2021-01-20T23:24:19+0000","dateStarted":"2021-01-20T23:41:32+0000","dateFinished":"2021-01-20T23:41:32+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:61"},{"text":"%spark.pyspark\n\nuserSpec = Window\\\n    .partitionBy(\"msisdn\", \"call_date\")\\\n    .orderBy(\"call_datetime\")\n\nuserSiteSpec = Window\\\n    .partitionBy(\"msisdn\", \"call_date\", \"site_id\")\\\n    .orderBy(\"call_datetime\")\n\neventSiteSpec = Window\\\n    .partitionBy(\"msisdn\", \"call_date\", \"group\")\\\n    .orderBy(\"call_datetime\")\n    \nsubscriberStopSpec = Window\\\n    .partitionBy(\"msisdn\").orderBy(\"stop_id\")\n    \nname = \"innocent\"","user":"innocent","dateUpdated":"2021-01-20T23:41:35+0000","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1611185059450_800390863","id":"20201202-235036_1840322363","dateCreated":"2021-01-20T23:24:19+0000","dateStarted":"2021-01-20T23:41:35+0000","dateFinished":"2021-01-20T23:41:35+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:62"},{"text":"%md\nThe goal of our transformations is to get all valid stops for one user in a given time frames\n","user":"innocent","dateUpdated":"2021-01-20T23:24:19+0000","config":{"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1611185059450_1047024484","id":"20201207-202037_1452778280","dateCreated":"2021-01-20T23:24:19+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:63"},{"text":"%spark.pyspark\nstops = calls\\\n    .withColumn(\"site_count\", F.count(\"site_id\").over(Window.partitionBy(\"msisdn\", \"call_date\", \"site_id\")))\\\n    .filter(col(\"site_count\") > 1)\\\n    .withColumn(\"event_id\", F.row_number().over(userSpec))\\\n    .withColumn(\"difference\", F.col(\"event_id\") - F.when(F.lag(\"event_id\", 1).over(userSiteSpec).isNull(), F.col(\"event_id\")).otherwise(F.lag(\"event_id\", 1).over(userSiteSpec)))\\\n    .withColumn(\"time_difference\", F.unix_timestamp(F.col(\"call_datetime\")) - F.unix_timestamp(F.when((F.lag(\"end_time\", 1).over(userSiteSpec)).isNull(), F.col(\"call_datetime\")).otherwise(F.lag(\"end_time\", 1).over(userSiteSpec))))\n    \n    \n# (1) For each subscriber for each day, count the number of timse that a subscriber has an event on a given site \n# (2) Filter those records where the site count is less than 1. Keep records where there is at least one event.\n# (3) Number each row within teh \"subscriber-call_date-site-id\" partition. This number events within this partition\n#     The following is a bit complex and involved, we we will all through it set by step\n    # ** Methods **\n    #   F.when().otherwise() => this allows use to conditionally specify the content of a column transformation.\n    #   Below we use it to handle the null values in our `lag` call. The first bit is:\n    #       > F.when((F.lag(\"event_id\", 1).over(userSiteSpec)).isNull, F.col(\"event_id\"))\n    #       > F.lag will create a new column where the entries are push down by one. In this case, in include an `isNull`. This applies to that first row. If the value in the new lagged column is null then the event_id is substituted. Is it isnt null, then we just use the lag. We can do this is a much simpler way, but this method demonstrates the power of Spark.\n# (4) Finally we subtract the event_id from the new lagged column. This differences helps us find consective stops. \n# (5) We do the same as above, but now we compare the time to find the time difference.\n","user":"innocent","dateUpdated":"2021-01-20T23:41:38+0000","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":12,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1611185059451_1691517383","id":"20201202-234734_735043210","dateCreated":"2021-01-20T23:24:19+0000","dateStarted":"2021-01-20T23:41:38+0000","dateFinished":"2021-01-20T23:41:38+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:64"},{"text":"%spark.pyspark\n## This needs an accompanying visualization\nstop_02 = stops\\\n    .withColumn(\"diffNotOne\",F.when((F.col(\"difference\") != 1) & (F.col(\"time_difference\") < 4*60*60), True).otherwise(False))\\\n    .withColumn(\"diffValue\", F.when(F.col(\"diffNotOne\") == True, 1).otherwise(0))\\\n    .withColumn(\"event_gap\", F.when(F.col(\"diffValue\") == 0, F.col(\"time_difference\")).otherwise(F.lit(0)))\\\n    .withColumn(\"group\", F.sum(F.col(\"diffValue\")).over(userSiteSpec.rangeBetween(Window.unboundedPreceding, 0)))\\\n    .withColumn(\"stop_id\", F.min(F.col(\"event_id\")).over(eventSiteSpec))\n        \n# This create a new column that is true when the event difference is not equal to one and the time the time difference is less than 4 hours.\n# This just encodes the difference as an integer 0 or 1\n# If the event difference is  greater than 1 the event gaps is set as the time_difference\n# We now create groups which is an id given to a records by sum the difference value in the subscriber-call-date-site spec.\n# The stop id is then the minimum event id over subscriver date and group id.\n","user":"innocent","dateUpdated":"2021-01-20T23:41:40+0000","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":12,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1611185059451_690204645","id":"20201207-190924_1511673478","dateCreated":"2021-01-20T23:24:19+0000","dateStarted":"2021-01-20T23:41:40+0000","dateFinished":"2021-01-20T23:41:41+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:65"},{"text":"%spark.pyspark\n\nstop_03 = stop_02\\\n    .groupBy(\"msisdn\", \"site_id\", \"call_date\", \"stop_id\")\\\n    .agg(\n        F.min(F.col(\"call_datetime\")).alias(\"start_time\"), # earliest date for that stop id\n        F.max(F.col(\"end_time\")).alias(\"end_time\"),        # last end time for that stop id\n        F.count(\"msisdn\").alias(\"frequency\"),          # number of time that subscriber made that stop at that date and site\n        F.max(\"event_gap\").alias(\"event_gap\"))\\\n    .withColumn(\"duration\", F.unix_timestamp(F.col(\"end_time\")) - F.unix_timestamp(F.col(\"start_time\")))\\\n    .withColumn(\"confidence\", F.col(\"event_gap\") / F.col(\"duration\"))\n    \n# We group by the following variable and run the followiing aggregations\n# (6) get the maximum event gap\n# (7) get the duration of that stop\n","user":"innocent","dateUpdated":"2021-01-20T23:41:43+0000","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":12,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1611185059451_427142842","id":"20201207-190956_1628521221","dateCreated":"2021-01-20T23:24:19+0000","dateStarted":"2021-01-20T23:41:43+0000","dateFinished":"2021-01-20T23:41:43+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:66"},{"text":"%spark.pyspark\nfilteredStops = stop_03.filter(F.col(\"duration\") >= 600)\\\n    .withColumn(\"STOP_ID\", F.row_number().over(subscriberStopSpec))","user":"innocent","dateUpdated":"2021-01-20T23:41:47+0000","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1611185059452_1665659234","id":"20201202-235733_1038017797","dateCreated":"2021-01-20T23:24:19+0000","dateStarted":"2021-01-20T23:41:48+0000","dateFinished":"2021-01-20T23:41:48+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:67"},{"text":"%spark.pyspark\nfilteredStops.show()","user":"innocent","dateUpdated":"2021-01-20T23:41:55+0000","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+--------------------+-------+----------+-------+-------------------+-------------------+---------+---------+--------+------------------+\n|              msisdn|site_id| call_date|STOP_ID|         start_time|           end_time|frequency|event_gap|duration|        confidence|\n+--------------------+-------+----------+-------+-------------------+-------------------+---------+---------+--------+------------------+\n|47A22A6AA2AB4972B...|   2207|2020-03-07|      1|2020-03-07 22:15:00|2020-03-07 23:15:51|        2|     3566|    3651|0.9767187072035058|\n|B7A1381DFE6E27592...|   2207|2020-03-07|      1|2020-03-07 20:15:00|2020-03-07 21:15:26|        2|     3560|    3626|0.9817981246552675|\n|2E6BD1C5C5DF3A5BB...|   1025|2020-03-08|      1|2020-03-08 15:15:00|2020-03-08 16:15:05|        2|     3597|    3605|0.9977808599167822|\n|84BAB686E702F3197...|   1426|2020-03-11|      1|2020-03-11 03:15:00|2020-03-11 06:15:01|        4|     3597|   10801|0.3330247199333395|\n|F5CF887CCD4DAE827...|   1426|2020-03-10|      1|2020-03-10 15:15:00|2020-03-10 16:15:07|        2|     3579|    3607|0.9922373163293596|\n|B67B5085B05238998...|   1434|2020-03-07|      1|2020-03-07 04:15:00|2020-03-07 05:15:04|        2|     3596|    3604|0.9977802441731409|\n|9D414DECEFAE2ECE4...|   1014|2020-03-12|      1|2020-03-12 06:15:00|2020-03-12 07:15:17|        2|     3511|    3617|0.9706939452585015|\n|59E64612430E0E2B9...|   1038|2020-03-05|      1|2020-03-05 19:15:00|2020-03-05 21:15:04|        3|     3596|    7204|0.4991671293725708|\n|E14E78F83F401CD96...|   1012|2020-03-13|      1|2020-03-13 03:15:00|2020-03-13 04:15:13|        2|     3596|    3613| 0.995294768890119|\n|584DEA3F5BD0A00BA...|   1282|2020-03-10|      1|2020-03-10 10:15:00|2020-03-10 11:15:13|        2|     3550|    3613|0.9825629670633822|\n|339C36311CD7A100E...|   1038|2020-03-05|      1|2020-03-05 22:15:00|2020-03-05 23:15:04|        2|     3592|    3604|0.9966703662597114|\n|BD8E47524A232748A...|   2209|2020-03-11|      1|2020-03-11 13:15:00|2020-03-11 14:15:05|        2|     3600|    3605|0.9986130374479889|\n|95DAB2DDD227B6D99...|   3404|2020-03-05|      1|2020-03-05 05:15:00|2020-03-05 06:15:51|        2|     3578|    3651|0.9800054779512463|\n|2137D4546C4CF1A54...|   1025|2020-03-08|      1|2020-03-08 13:15:00|2020-03-08 14:15:07|        2|     3589|    3607|0.9950097033545883|\n|78FD95C053BB990D7...|   1218|2020-03-06|      1|2020-03-06 03:15:00|2020-03-06 04:15:01|        2|     3547|    3601|0.9850041655095807|\n|EC93458FA6C308463...|   1025|2020-03-08|      1|2020-03-08 11:15:00|2020-03-08 12:15:09|        2|     3595|    3609|0.9961208090883902|\n|6D01C2874449429E2...|   2033|2020-03-10|      1|2020-03-10 13:15:00|2020-03-10 14:15:20|        2|     3600|    3620| 0.994475138121547|\n|18D454081C834929F...|   4049|2020-03-05|      1|2020-03-05 11:15:00|2020-03-05 12:15:07|        2|     3554|    3607|0.9853063487662878|\n|C812831B5C0C51185...|   3531|2020-03-09|      1|2020-03-09 03:15:00|2020-03-09 04:15:10|        2|     3561|    3610|0.9864265927977839|\n|D4A76E796FC2251D9...|   2035|2020-03-12|      1|2020-03-12 03:15:00|2020-03-12 04:15:46|        2|     3491|    3646|0.9574876577070762|\n+--------------------+-------+----------+-------+-------------------+-------------------+---------+---------+--------+------------------+\nonly showing top 20 rows\n\n"}]},"apps":[],"jobName":"paragraph_1611185059452_-1578361182","id":"20210120-200154_1573424590","dateCreated":"2021-01-20T23:24:19+0000","dateStarted":"2021-01-20T23:41:55+0000","dateFinished":"2021-01-20T23:42:01+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:68"},{"text":"%spark.pyspark\n\noutput_path = \"s3n://sierra-leone-lake/training/data/cdrs/stops/{}_stops\".format(name)\n\nfilteredStops.write\\\n    .format(\"csv\")\\\n    .mode(\"overwrite\")\\\n    .option(\"header\", \"true\")\\\n    .save(output_path)","user":"innocent","dateUpdated":"2021-01-20T23:45:14+0000","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1611185059453_579114726","id":"20201202-235734_534317555","dateCreated":"2021-01-20T23:24:19+0000","dateStarted":"2021-01-20T23:45:14+0000","dateFinished":"2021-01-20T23:46:56+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:69"},{"user":"innocent","dateUpdated":"2021-01-20T23:24:19+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1611185059453_1184130169","id":"20210120-201522_1132629073","dateCreated":"2021-01-20T23:24:19+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:70"}],"name":"Training/3.Generate_Stops","id":"2FVYE52PR","noteParams":{},"noteForms":{},"angularObjects":{"md:shared_process":[],"python:shared_process":[],"sh:shared_process":[],"spark:shared_process":[]},"config":{"isZeppelinNotebookCronEnable":false,"looknfeel":"default","personalizedMode":"false"},"info":{}}